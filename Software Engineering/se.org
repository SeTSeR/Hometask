Кулямин Виктор Вячеславович, kulyamin@ispras.ru
https://sites.google.com/view/msusecourse

* Основные принципы программной инженерии
SE - дисциплина, изучающая методы создания, сопровождения и анализа свойств программных систем. В основе SE нет фундаментальной науки,
не получается отделить общие свойства программных систем от конкретных задач. В отличие от Computer Science, нет чёткой постановки
задачи, что ведёт к возможности бесконечного развития программных систем.
Программная инеженерия:
1. Взаимодействие с людьми с целью извлечения знаний о требованиях к системе.
2. Командная разработка и управление ей.
3. Микроэкономическая задача - максимизация выхлопа от системы при минимальном количестве затрат.
Особенность программной инженерии - необходимость поддержки системы, т. е. приспособления её под постоянно изменяющиеся задачи.

Принцип модульности - разбиение системы на максимально независимые функциональные части с максимально простым и
максимально устойчивым(слабо меняющимся) интерфейсом взаимодействия. Для этого интерфейс должен обладать следующими свойствами:
1. Адекватность - соответствие интерфейса решаемым задачам.
2. Полнота - все нужные операции для решения задач присутствуют в интерфейсе.
3. Простота и естественность.
4. Минимальность(не обязательно).

Абстракция и уточнение. Повторное использование уже созданных частей системы.
* Процесс разработки программных систем
Жизненный цикл системы - период от появления идеи системы до вывода её из эксплуатации.

Жизненный цикл:
0. Определение требований.
1. Проектирование решения.
2. Реализация решения.
3. Контроль качества(QA).
4. Развёртывание в продакшене.

Модели жизненного цикла:
1. Водопадная модель. Характеристики: стабильность, негибкость разработки, возможность планирования, понятность и простота управления.
2. Итерационная модель. Характеристики: более гибкая, но при этом всё ещё достаточно простая и понятная. Планирование сроков при этом затруднено за счёт возвратов.
   * Спиральная модель. Все итерации имеют одинаковую структуру, что упрощает планирование.

Описание технологического процесса - описание ролей и распределения их по людям.
ISO, IEEE, ГОСТ
Стандарты описания процесса разработки: ISO 15288, ISO 15504, ISO 12207
CMMI стандартизирует *уровни организации*:
1. initial - любая организация.
2. managed - разработка + статистика по ресурсам.
3. defined - описан тех. процесс разработки, соответствующий реальности.
4. quantitatively managed - помимо тех. процесса описаны метрики, используемые для планирования затрат.
5. optimizing - всё предыдущее + есть подразделение, "обучающее" тех. процесс и метрики.

Виды процессов в ISO 12207:
1. Системные
   + Процессы для ведения переговоров: приобретение и поставка ПО
   + Организационные процессы: управление моделью lifecycle, управление инфраструктурой, управление портфолио проектов, управление персоналом и управление качеством.
   + Проектные процессы: планирование, оценка и контроль, измерение.
   + Технические процессы: определение и анализ требований, проектирование системы в целом, реализация, интеграция, развёртывание, поддержка приёмки, удаление
2. Процессы для ПО
   + Процессы реализации.
   + Процессы поддержки ПО.
   + Процессы повторного использования ПО.

RUP и XP.
* RUP и XP
RUP - модели: варианты использования и архитектура. XP - управление командой.
Жизненный цикл в RUP: Inception, Elaboration, Construction, Transition.
Inception - установление ключевых людей.
Elaboration - выработка требований и создание архитектуры.
Construction - основной этап написания кода и построения системы.
Transition - передача системы в эксплуатацию.

Отдельные фазы могут повторяться.

Модель требований, модель анализа, модель проектирования, модель реализации, модель развёртывания, модель тестирования.
