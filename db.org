#+LANGUAGE: ru
#+LATEX_ENGINE: pdflatex
#+LATEX_HEADER:\usepackage{listings}
#+LATEX_HEADER:\usepackage{amsmath}
#+LATEX_HEADER:\usepackage{esint}
#+LATEX_HEADER:\usepackage{mathtools}
#+LATEX_HEADER:\usepackage{amsthm}
#+LATEX_HEADER:\usepackage{minted}
#+LATEX_HEADER:\usepackage[top=0.8in, bottom=0.75in, left=0.625in, right=0.625in]{geometry}

#+LATEX_HEADER:\usepackage{float}
#+LATEX_HEADER:\usepackage{dot2texi}
#+LATEX_HEADER:\usepackage{tikz}
#+LATEX_HEADER:\usetikzlibrary{shapes, arrows, positioning}

#+LATEX_HEADER:\def\zall{\setcounter{lem}{0}\setcounter{cnsqnc}{0}\setcounter{th}{0}\setcounter{Cmt}{0}\setcounter{equation}{0}\setcounter{stnmt}{0}}

#+LATEX_HEADER:\newcounter{lem}\setcounter{lem}{0}
#+LATEX_HEADER:\def\lm{\par\smallskip\refstepcounter{lem}\textbf{\arabic{lem}}}
#+LATEX_HEADER:\newtheorem*{Lemma}{Лемма \lm}

#+LATEX_HEADER:\newcounter{th}\setcounter{th}{0}
#+LATEX_HEADER:\def\th{\par\smallskip\refstepcounter{th}\textbf{\arabic{th}}}
#+LATEX_HEADER:\newtheorem*{Theorem}{Теорема \th}

#+LATEX_HEADER:\newcounter{cnsqnc}\setcounter{cnsqnc}{0}
#+LATEX_HEADER:\def\cnsqnc{\par\smallskip\refstepcounter{cnsqnc}\textbf{\arabic{cnsqnc}}}
#+LATEX_HEADER:\newtheorem*{Consequence}{Следствие \cnsqnc}

#+LATEX_HEADER:\newcounter{Cmt}\setcounter{Cmt}{0}
#+LATEX_HEADER:\def\cmt{\par\smallskip\refstepcounter{Cmt}\textbf{\arabic{Cmt}}}
#+LATEX_HEADER:\newtheorem*{Note}{Замечание \cmt}

#+LATEX_HEADER:\newcounter{stnmt}\setcounter{stnmt}{0}
#+LATEX_HEADER:\def\st{\par\smallskip\refstepcounter{stnmt}\textbf{\arabic{stnmt}}}
#+LATEX_HEADER:\newtheorem*{Statement}{Утверждение \st}

#+TITLE: Базы данных
#+DATE: \today
#+AUTHOR: Макаров Сергей, группа 427
#+EMAIL: setser200018@gmail.com
#+OPTIONS: toc:nil

* Введение
 Требования к СУБД:
1. Эффективный доступ и хранение данных
2. Поддержка языка запросов
3. Поддержка целостности данных
4. Поддержка транзакций и многопользовательского режима
5. Поддержка журналирования и архивирования данных
  Необходимость СУБД как отдельного компонента:
1. Журналирование и другие метаданные.
2. Нормализация и более тонкое управление внешней памятью
3. Управление оперативной(основной) памятью, доступ к физической основной памяти для кэшей и буферов
* Реляционная модель
** Алгебра Кодда
   Операции:
+ UNION -- объединение таблиц с совпадающими заголовками
+ INTERSECT -- пересечение таблиц с совпадающими заголовками
+ MINUS -- разность таблиц с совпадающими заголовками
+ TIMES -- декартово произведение таблиц с непересекающимися заголовками, кортежи результата -- попарное объединение исходных кортежей
+ WHERE -- ограничение таблицы по условию
+ PROJECT -- проекция таблицы на множество атрибутов
+ JOIN -- соединение кортежей по условию
+ DIVIDE BY -- операция, обратная декартову произведению
+ RENAME -- переименование атрибутов
+ Присваивание
Приоритеты:
#+begin_export latex
\begin{equation*}
RENAME \geq WHERE = PROJECT \geq TIMES = JOIN = INTERSECT = DIVIDE BY \geq UNION = MINUS
\end{equation*}
#+end_export
** Алгебра A*
+ Реляционное дополнение -- дополнение тела операнда до всей таблицы
+ Операция удаления атрибута
+ Операция переименования
+ Реляционная конъюкция -- множество кортежей, представляющих попарное объединение кортежей-операндов
+ Реляционная дизъюнкция -- множество кортежей, представляющее объединение пар кортежей, хотя бы одна из которых содержится в одном из операндов
Операция дизъюнкции выражается через операцию конъюкции и дополнения по закону де Моргана
* Нормализация
+ Теорема Хита
  Пусть задано отношение $r = \{A, B, C\}$ и выполняется FD $A \to B$. Тогда
#+begin_src text
r = (r PROJECT {A, B}) NATURAL JOIN (r PROJECT {A, C})
#+end_src 
+ Первая нормальная форма
  Значения всех атрибутов атомарны, т. е. их внутренняя структура не видна. Несоблюдение этого требования усложняет структуру тублицы и работу со значениями в ней.
+ Вторая нормальная форма
  Выполняются требования первой нормальной формы, и каждый неключевой атрибут минимально функционально зависит от первичного ключа. Несоблюдение этого требования усложняет работу с БД, так как первичный ключ содержит избыточную информацию.
+ Третья нормальная форма
 Отношение находится во второй нормальной форме, и каждый неключевой атрибут нетранзитивно функционально зависит от первичного ключа. При несоблюдении этого требования возникают проблемы с обновлением сущности, входящей в транзитивную зависимость.
+ Теорема Риссанена
  Проекции $r_1$ и $r_2$ отношения $r$ являются независимыми тогда и только тогда, когда:
  1. каждая FD в $r$ логически следует из FD в $r_1$ и $r_2$.
  2. общие атрибуты $r_1$ и $r_2$ образуют возможный ключ хотя бы одного из этих отношений
+ Нормальная форма Бойса-Кодда
  Отношение находится в BCNF тогда и только тогда, когда любая выполняемая для него нетривиальная и минимальная FD имеет в качестве детерминанта некоторый возможный ключ этого отношения.
+ Теорема Фейджина
Пусть имеется переменная отношения $R\{A, B, C\}$. Отношение $R$ декомпозируется без потерь на проекции $\{A, B\}$ и $\{A, C\}$ тогда и только тогда, когда для него выполняется MVD $A \to\to B | C$.
+ Четвёртая нормальная форма
  Переменная отношения $r$ находится в четвёртой нормальной форме тогда и только тогда, когда она находится в BCNF, и все MVD $r$ являются FD, детерминантами которых являются возможные ключи $r$.
+ Пятая нормальная форма
  Переменная отношения $r$ находится в пятой нормальной форме тогда и только тогда, когда любая её зависимость проекции-соединения подразумевается возможными ключами отношения $R$.
* Синхронизация
+ Atomicy(атомарность) -- результаты транзакции после фиксации либо отражены в состоянии БД полностью, либо не отображены вообще.
+ Consistency(согласованность, целостность) -- транзакция может быть зафиксирована тогда и только тогда, когда её действие не нарушает целостности БД.
+ Isolation(изоляция) -- две параллельно работающие транзакции не должны действовать одна на другую.
+ Durability(долговечность) -- после успешного завершения транзакции все внесённые ей изменения должны сохраняться даже в случае сбоев.

Степени изоляции транзакций:
1. Отсутствие потерянных изменений.
2. Отсутствие чтения грязных данных.
3. Отсутствие неповторяющихся чтений.
4. Сериализация транзакций -- выполнение их действий в таком порядке, результаты которого были бы такие же, как при последовательном их выполнении в некотором порядке.

  Таблица совместимости блокировок:
|---------+-----+-----+-----+-----+-----|
|         | X   | S   | IX  | IS  | SIX |
|---------+-----+-----+-----+-----+-----|
| no lock | да  | да  | да  | да  | да  |
| X       | нет | нет | нет | нет | нет |
| S       | нет | да  | нет | да  | нет |
| IX      | нет | нет | да  | да  | нет |
| IS      | нет | да  | да  | да  | да  |
| SIX     | нет | да  | нет | да  | нет |
|---------+-----+-----+-----+-----+-----|
* B+-деревья
B+-tree -- сильно ветвистое сбалансированное дерево, применяется для построения индекса. Внутренние узлы дерева содержат адреса страниц-детей, перемежающиеся с ключами. При этом поддерживается упорядоченность ключей. Листовая страница содержит ключи, за которыми следуют указатели на списки id кортежей, содержащих этот ключ.
